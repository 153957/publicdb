- name: Use custom .bashrc
  ansible.builtin.template:
    src: bashrc
    dest: ~/.bashrc
    backup: true

- name: "Ensure {{ datastore-path }} directory exists"
  ansible.builtin.file:
    path: "{{ datastore_path }}"
    state: directory
    mode: 02775

- name: Ensure log directory exists
  ansible.builtin.file:
    path: "{{ datastore_logs }}"
    state: directory
    mode: 0775

- name: "Checkout datastore in {{ datastore_code }}"
  ansible.builtin.git:
    repo: "{{ datastore_repo }}"
    dest: "{{ datastore_code }}"
    update: true
    force: false
    version: master
  notify: Restart webserver

- name: Remove compiled python code
  ansible.builtin.command:
    cmd: "find {{ datastore_code }} -name *.pyc -delete"

- name: Copy conda requirements files
  ansible.builtin.copy:
    src: conda.list
    dest: ~/conda.list

- name: Copy pip requirements files
  ansible.builtin.copy:
    src: pip.list
    dest: ~/pip.list

- name: Create conda environment
  ansible.builtin.shell:
    cmd: "{{ miniconda_path }}/bin/conda create --prefix {{ datastore_venv }} python={{ datastore_python_version }} --yes"
    creates: "{{ datastore_venv }}"

- name: Install conda packages in conda environment
  ansible.builtin.command:
    cmd: "{{ miniconda_path }}/bin/conda install --prefix {{ datastore_venv }} --channel conda-forge --file ~/conda.list --yes"

- name: Copy datastore.py
  ansible.builtin.template:
    src: datastore.py
    dest: "{{ datastore_path }}"
    backup: yes
  notify: Restart webserver

- name: Copy writer_app.py
  ansible.builtin.template:
    src: writer_app.py
    dest: "{{ datastore_path }}"
    backup: yes

- name: Copy datastore config server
  ansible.builtin.template:
    src: datastore-config-server.py
    dest: "{{ datastore_path }}"
  notify: Restart datastore config server

- name: Copy config.ini
  ansible.builtin.template:
    src: config.ini
    dest: "{{ datastore_path }}"
    backup: yes
  notify: Restart webserver
