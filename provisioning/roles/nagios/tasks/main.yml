---

- name: install nagios, apache
  yum:
    name:
      - nagios
      - nagios-plugins-all
      - nagios-plugins-nrpe
      - nrpe
      - httpd
  become: true

- name: ensure /usr/local/nrdp exists
  file:
    path: /usr/local/nrdp
    state: directory
    mode: 0755
  become: true

- name: Download and install Nagios NRDP
  unarchive:
    src: "https://github.com/NagiosEnterprises/nrdp/archive/1.5.2.tar.gz"
    dest: "/usr/local/nrdp"
    owner: nagios
    group: nagios
    remote_src: yes
    extra_opts:
    - --strip=1   # remove the folder nrdp-1.5.x.
  become: true

- name: set nrdp token
  lineinfile:
    dest: /usr/local/nrdp/server/config.inc.php
    insertafter: 'authorized_tokens'
    line: '"nrdp4hisp"  // does not have to be secret - NRDP inside VPN'
    backup: yes
  become: true

- name: set nagios checkresults folder in nrdp config
  lineinfile:
    dest: /usr/local/nrdp/server/config.inc.php
    regexp: 'check_results_dir'
    line: '$cfg["check_results_dir"] = "/var/spool/nagios/checkresults";'
    backup: yes
  become: true

- name: set nagios command group in nrdp config
  lineinfile:
    dest: /usr/local/nrdp/server/config.inc.php
    regexp: 'nagios_command_group'
    line: '$cfg["nagios_command_group"] = "nagios";'
    backup: yes
  become: true

- name: overwrite apache nagios config
  copy:
    src: apache-nagios.conf
    dest: /etc/httpd/conf.d/nagios.conf
    backup: yes
  become: true
  notify: restart apache

- name: copy apache nagios NRDP plugin config
  copy:
    src: apache-nrdp.conf
    dest: /etc/httpd/conf.d/
    backup: yes
  become: true
  notify: restart apache

- name: remove documentroot setting from apache default settings
  replace:
    dest: /etc/httpd/conf/httpd.conf
    regexp: "^DocumentRoot"
    replace: "#DocumentRoot"
    backup: yes
  become: true
  notify: restart apache

- name: remove scriptalias setting from apache default settings
  replace:
    dest: /etc/httpd/conf/httpd.conf
    regexp: "^[ \t]{1,}ScriptAlias"
    replace: "#ScriptAlias"
    backup: yes
  become: true
  notify: restart apache

- name: copy nagios cgi config
  copy:
    src: cgi.cfg
    dest: /etc/nagios
    backup: yes
  become: true
  notify: restart apache

- name: fix cgi_base_url path for nagios
  replace:
    dest: /usr/share/nagios/html/config.inc.php
    regexp: "/nagios/cgi-bin"
    replace: "/cgi-bin"
    backup: yes
    mode: 0644
  become: true
  notify: restart apache

- name: set correct corewindow for nagios index.php
  replace:
    dest: /usr/share/nagios/html/index.php
    regexp: 'url[ ]=[ ]"main.php"'
    replace: 'url="/cgi-bin/status.cgi?hostgroup=all"'
    backup: yes
  become: true
  notify: restart apache

- name: ensure /var/run/nagios exists
  file:
    path: /var/run/nagios
    state: directory
    owner: nagios
    group: nagios
    mode: 0755
  become: true

- name: copy nagios config
  copy:
    src: nagios.cfg
    dest: /etc/nagios
    backup: yes
  become: true
  notify: restart nagios

- name: copy nagios commands config
  copy:
    src: commands.cfg
    dest: /etc/nagios/objects
    backup: yes
  become: true
  notify: restart nagios

# This is only an initial configuration. On changes, the config is
# retrieved from Pique. So force=no, and backup is unnecessary.
- name: copy nagios hisparc config file
  copy:
    src: hisparc.cfg
    dest: /etc/nagios/objects
    owner: nagios
    force: no
  become: true
  notify: restart nagios

- name: ensure apache is started
  service:
    name: httpd
    enabled: yes
    state: started
  become: true

- name: ensure nagios is started
  service:
    name: nagios
    enabled: yes
    state: started
  become: true

- name: ensure nrpe is started
  service:
    name: nrpe
    enabled: yes
    state: started
  become: true

- name: keep nagios archives in check
  cron:
    name: nagios-logs
    cron_file: hisparc-nagios
    user: nagios
    job: "find /var/log/nagios/archives -mtime +90 -delete"
    special_time: daily
  become: true
