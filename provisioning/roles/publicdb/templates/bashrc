# {{ ansible_managed }}
# .bashrc for publicdb host

# >>> conda initialize >>>
# !! Contents within this block are managed by 'conda init' !!
__conda_setup="$({{ miniconda_path }} 'shell.bash' 'hook' 2> /dev/null)"
if [ $? -eq 0 ]; then
    eval "$__conda_setup"
else
    if [ -f "{{ miniconda_path }}/etc/profile.d/conda.sh" ]; then
        . "{{ miniconda_path }}/etc/profile.d/conda.sh"
    else
        export PATH="{{ miniconda_path }}/bin:$PATH"
    fi
fi
unset __conda_setup
# <<< conda initialize <<<

# Activate env
conda activate publicdb_venv
alias envpub='conda activate {{ publicdb_venv }}'

# Supervisor aliases
alias startsupd='supervisord -c {{ supervisord_path }}/supervisord.conf'
alias stopsupd='killall -w supervisord'
alias statussupd="if pgrep supervisord >/dev/null; then echo 'RUNNING'; else echo 'NOT RUNNING'; fi"
alias supctl='supervisorctl -c {{ supervisord_path }}/supervisord.conf'

# Go to publicdb repository
alias cdpub='cd {{ publicdb_path }}'
alias cdpubwww='cd {{ publicdb_code }}'
alias cdjsp='cd {{ jsparc_path }}'

# Reload web server
alias reload='touch /tmp/uwsgi-reload.me'

# Collect static files, and reload uwsgi
alias collectreload='envpub && cdpubwww && ./manage.py collectstatic --noinput && touch /tmp/uwsgi-reload.me'

# Perform the daily hisparc-update task
alias uphis='envpub && cdpubwww && ./manage.py updatehistograms'

# Update publicdb to latest master
alias uppub='envpub && cdpubwww && git fetch && git reset --hard origin/master && collectreload'
# Update jSparc to latest master
alias upjs='envpub && cdjsp && git fetch && git reset --hard origin/master'
