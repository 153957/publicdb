# .bashrc

# Source global definitions
if [ -f /etc/bashrc ]; then
	. /etc/bashrc
fi

# User specific aliases and functions

# >>> conda initialize >>>
# !! Contents within this block are managed by 'conda init' !!
__conda_setup="$({{ miniconda_path }} 'shell.bash' 'hook' 2> /dev/null)"
if [ $? -eq 0 ]; then
    eval "$__conda_setup"
else
    if [ -f "{{ miniconda_path }}/base/etc/profile.d/conda.sh" ]; then
        . "{{ miniconda_path }}/base/etc/profile.d/conda.sh"
    else
        export PATH="{{ miniconda_path }}/base/bin:$PATH"
    fi
fi
unset __conda_setup
# <<< conda initialize <<<

# Activate env
alias envpub='conda activate {{ publicdb_venv }}'
# Go to publicdb repository
alias cdpub='cd {{ publicdb_code }}'
alias cdjsp='cd {{ jsparc_path }}'
# Collect static files, and reload uwsgi
alias collectreload='envpub && cdpub && ./manage.py collectstatic --noinput && touch /tmp/uwsgi-reload.me'

# Perform the daily hisparc-update task
alias uphis='envpub && cdpub && ./manage.py updatehistograms'

# Update publicdb to latest master
alias uppub='envpub && cdpub && git fetch && git reset --hard origin/master && collectreload'
# Update jSparc to latest master
alias upjs='envpub && cdjsp && git fetch && git reset --hard origin/master'

# Prompt
[[ -n "$SSH_CLIENT" ]] && PS1='\[\e[1;30m\]$(date +%y%m%d\ %H:%M:%S) \[\e[1;32m\]\u@\h \[\e[1;34m\]\w\n$CONDA_DEFAULT_ENV\[\e[m\]> '
