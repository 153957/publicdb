- name: ensure /srv directory exists
  file: path=/srv state=directory
  become: true

- name: ensure /srv/datastore directory exists
  file: path=/srv/datastore state=directory
        owner=hisparc group=hisparc mode=2775
  become: true

- name: set default group write ACLs on /srv/datastore
  command: /usr/bin/setfacl -m d:g::rwx /srv/datastore
  become: true

- name: ensure /var/log/hisparc directory exists
  file: path=/var/log/hisparc state=directory group=hisparc mode=775
  become: true

- name: checkout datastore in /srv/datastore/code
  git: repo=https://github.com/HiSPARC/datastore.git dest=/srv/datastore/code
       update=yes force=no
  notify: restart uWSGI

- name: remove compiled python code
  command: find /srv/datastore/code -name *.pyc -delete

- name: Copy conda requirements files
  copy: src=conda-datastore.list dest=/home/{{ ansible_user_id }}/

- name: Copy pip requirements files
  copy: src=pip-datastore.list dest=/home/{{ ansible_user_id }}/

- name: create conda environment
  shell: creates=/srv/datastore/datastore_env
         yes | /opt/miniconda/bin/conda create
         -p /srv/datastore/datastore_env python --yes

- name: install conda packages in conda environment
  command: /opt/miniconda/bin/conda install -p /srv/datastore/datastore_env
           --file /home/{{ ansible_user_id }}/conda-datastore.list --yes

- name: install packages in conda environment using pip
  command: /srv/datastore/datastore_env/bin/pip install
           -r /home/{{ ansible_user_id }}/pip-datastore.list

- name: copy datastore.wsgi
  copy: src=datastore.wsgi dest=/srv/datastore backup=yes
  notify: restart uWSGI

- name: copy writer_app.py
  copy: src=writer_app.py dest=/srv/datastore backup=yes

- name: copy datastore config server
  template: src=datastore-config-server.py dest=/srv/datastore/
  notify: restart uWSGI

- name: copy datastore.ini
  copy: src=config-datastore.ini dest=/srv/datastore/config.ini backup=yes
  notify: restart uWSGI

- name: copy uwsgi.ini
  copy: src=uwsgi-datastore.ini dest=/srv/datastore/uwsgi.ini backup=yes
  notify: restart uWSGI

- name: install supervisor daemon
  pip: name=supervisor
  become: true

- name: copy supervisord init script
  copy: src=init-supervisord dest=/etc/init.d/supervisord backup=yes
        owner=root group=root mode=0755
  become: true

- name: copy supervisord.conf
  copy: src=supervisord-datastore.conf dest=/etc/supervisord.conf backup=yes
        owner=root group=root mode=0644
  become: true
  notify: restart supervisord

- name: start supervisord now and on boot
  service: name=supervisord state=started enabled=yes
  become: true
