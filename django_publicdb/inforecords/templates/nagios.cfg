{% load url from future %}
#
# Nagios configuration file for the HiSPARC experiment
#
#
# This file was automatically generated by the HiSPARC administration site
# software.
#

{% for cluster in clusters %}
define hostgroup {
    hostgroup_name         {{ cluster.name|slugify }}
    alias                  {{ cluster.name }}
}
{% endfor %}

define contact {
    use                    generic-contact
    contact_name           none
    alias                  No listed contact person
    email                  admhispa@nikhef.nl
}

{% for contact in contacts %}
define contact {
    use                    generic-contact
    contact_name           {{ contact|slugify }}
    alias                  {{ contact }}
  {% if contact.contactinformation.email_work not in "nobody@nobody.com,nobody@example.com" %}
    email                  {{ contact.contactinformation.email_work }}
  {% endif %}
}
{% endfor %}

define command{
    command_name check_pulseheight_mpv
    command_line $USER1$/check_pulseheight_mpv.py $ARG1$ $ARG2$
}

{% for host in hosts %}
define host {
    use                    generic-host
    host_name              {{ host.pc.name|slugify }}
    address                {{ host.pc.ip }}
    alias                  {{ host.pc.station.name }} ({{ host.pc.station.number }})
    hostgroups             {{ host.pc.station.cluster|slugify }}
    contacts               {{ host.pc.station.contact|slugify }}
    check_command          check-host-alive
    check_interval         5
    retry_interval         5
    max_check_attempts     5
    notification_interval  1440  # Notify daily
  {% if host.has_data %}
    notes_url              http://data.hisparc.nl{% url 'status_display.views.station' host.pc.station.number %}
  {% endif %}
}
{% for service in host.services %}
define service {
    use                    generic-service
    host_name              {{ host.pc.name|slugify }}
    service_description    {{ service.description }}
    check_command          {{ service.check_command|safe }}
  {% if service.active_checks %}
    check_interval         10
    retry_interval         5
    max_check_attempts     6
  {% endif %}
  {% if not service.active_checks %}
    active_checks_enabled  0
    check_freshness        1  # Check if data turns stale
    freshness_threshold    1800  # 30 minutes
  {% endif %}
    notification_interval  1440  # Notify daily
}
{% endfor %}

{% for threshold in host.pulseheight_thresholds %}
define service{
    use                    generic-service
    host_name              {{ host.pc.name|slugify }}
    service_description    Pulseheight MPV plate {{ threshold.plate }}
    check_command          check_pulseheight_mpv!{{ host.pc.station.number }}!{{ threshold.plate }}
    check_interval         60
    retry_interval         60
}
{% endfor %}

{% endfor %}
